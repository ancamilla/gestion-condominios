{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\janom\\\\OneDrive\\\\Documentos\\\\GitHub\\\\gestion_condominios\\\\gestion-condominios\\\\frontend\\\\src\\\\pages\\\\ReservasPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Calendar from \"react-calendar\";\nimport \"react-calendar/dist/Calendar.css\";\nimport \"./ReservasPage.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ReservasPage = () => {\n  _s();\n  // Estados principales\n  const [vista, setVista] = useState(\"reservar\"); // Controla la vista actual: \"reservar\" o \"historial\"\n  const [espacios, setEspacios] = useState([]); // Lista de espacios comunes\n  const [espacioSeleccionado, setEspacioSeleccionado] = useState(\"\"); // Espacio actualmente seleccionado\n  const [reservas, setReservas] = useState([]); // Reservas del espacio seleccionado\n  const [reservasFuturas, setReservasFuturas] = useState([]); // Futuras reservas de todos los usuarios\n  const [historial, setHistorial] = useState([]); // Historial de reservas del usuario autenticado\n  const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date()); // Fecha seleccionada en el calendario\n  const [message, setMessage] = useState(\"\"); // Mensaje informativo para el usuario\n  const [horaInicio, setHoraInicio] = useState(\"\"); // Hora de inicio seleccionada\n  const [restricciones, setRestricciones] = useState({\n    inicio: \"06:00\",\n    fin: \"20:00\"\n  }); // Horarios permitidos para reservas\n  const [showPopup, setShowPopup] = useState(false); // Controla la visibilidad del pop-up de confirmación\n\n  // --- Funciones de Carga ---\n\n  // Cargar espacios al iniciar\n  useEffect(() => {\n    const fetchEspacios = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/espacios\");\n        setEspacios(response.data);\n        if (response.data.length > 0) {\n          setEspacioSeleccionado(response.data[0]._id); // Selecciona automáticamente el primer espacio\n        }\n      } catch (error) {\n        console.error(\"Error al cargar espacios:\", error);\n      }\n    };\n    fetchEspacios();\n  }, []);\n\n  // Cargar reservas del espacio seleccionado\n  useEffect(() => {\n    const fetchReservas = async () => {\n      try {\n        if (espacioSeleccionado) {\n          const response = await axios.get(\"http://localhost:5000/api/reservas\", {\n            params: {\n              espacio: espacioSeleccionado\n            }\n          });\n          setReservas(response.data); // Actualiza la lista de reservas\n        }\n      } catch (error) {\n        console.error(\"Error al cargar reservas:\", error);\n      }\n    };\n    fetchReservas();\n  }, [espacioSeleccionado]);\n\n  // Cargar reservas futuras de todos los usuarios para el espacio seleccionado\n  useEffect(() => {\n    const fetchReservasFuturas = async () => {\n      try {\n        if (espacioSeleccionado) {\n          const response = await axios.get(\"http://localhost:5000/api/reservas\", {\n            params: {\n              espacio: espacioSeleccionado,\n              futuras: true\n            }\n          });\n          setReservasFuturas(response.data); // Actualiza las reservas futuras\n        }\n      } catch (error) {\n        console.error(\"Error al cargar reservas futuras:\", error);\n      }\n    };\n    fetchReservasFuturas();\n  }, [espacioSeleccionado]);\n\n  // Cargar historial de reservas del usuario autenticado\n  useEffect(() => {\n    const fetchHistorial = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:5000/api/reservas/historial\", {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n          }\n        });\n        setHistorial(response.data); // Actualiza el historial del usuario autenticado\n      } catch (error) {\n        console.error(\"Error al cargar el historial de reservas:\", error);\n      }\n    };\n    fetchHistorial();\n  }, []);\n\n  // --- Lógica de Negocio ---\n\n  // Cambiar entre las vistas \"Reservar\" y \"Historial\"\n  const cambiarVista = nuevaVista => setVista(nuevaVista);\n\n  // Crear nueva reserva\n  const handleCrearReserva = async () => {\n    try {\n      if (!horaInicio) {\n        setMessage(\"Por favor, selecciona una hora de inicio.\");\n        return;\n      }\n      const response = await axios.post(\"http://localhost:5000/api/reservas\", {\n        espacio: espacioSeleccionado,\n        fecha: `${fechaSeleccionada.toISOString().split(\"T\")[0]}T${horaInicio}:00`\n      }, {\n        headers: {\n          Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n        }\n      });\n      setMessage(\"Reserva creada exitosamente\");\n      setReservasFuturas([...reservasFuturas, response.data.reserva]); // Actualizar futuras reservas\n      setShowPopup(false); // Cerrar pop-up\n    } catch (error) {\n      setMessage(\"Error al crear la reserva.\");\n    }\n  };\n\n  // Resaltar días con reservas en el calendario\n  const resaltarDiasReservados = ({\n    date\n  }) => {\n    const fechasReservadas = reservas.map(reserva => new Date(reserva.fecha).toDateString());\n    return fechasReservadas.includes(date.toDateString()) ? \"dia-reservado\" : null;\n  };\n\n  // Generar lista de horas permitidas según las restricciones\n  const generarHoras = () => {\n    const [inicioHora] = restricciones.inicio.split(\":\").map(Number);\n    const [finHora] = restricciones.fin.split(\":\").map(Number);\n    const horas = [];\n    for (let hora = inicioHora; hora < finHora; hora++) {\n      horas.push(`${hora.toString().padStart(2, \"0\")}:00`);\n    }\n    return horas;\n  };\n\n  // --- Renderizado ---\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"reservas-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Gesti\\xF3n de Reservas\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"nav-tabs\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => cambiarVista(\"reservar\"),\n        className: vista === \"reservar\" ? \"active-tab\" : \"\",\n        children: \"Realizar Reserva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => cambiarVista(\"historial\"),\n        className: vista === \"historial\" ? \"active-tab\" : \"\",\n        children: \"Ver Historial\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), vista === \"reservar\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: espacioSeleccionado,\n        onChange: e => setEspacioSeleccionado(e.target.value),\n        children: espacios.map(espacio => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: espacio._id,\n          children: espacio.nombre\n        }, espacio._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Calendar, {\n        onChange: date => setFechaSeleccionada(date),\n        value: fechaSeleccionada,\n        tileClassName: resaltarDiasReservados\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 175,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        value: horaInicio,\n        onChange: e => setHoraInicio(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"Seleccione una hora\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, this), generarHoras().map(hora => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hora,\n          children: hora\n        }, hora, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => setShowPopup(true),\n        children: \"Solicitar reserva\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), showPopup && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"popup-overlay\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"popup\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Confirmaci\\xF3n de Reserva\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Para confirmar la reserva es necesario pagar la mitad por adelantado.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-continuar\",\n            onClick: handleCrearReserva,\n            children: \"Continuar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn-cancelar\",\n            onClick: () => setShowPopup(false),\n            children: \"Cancelar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Futuras reservas de este espacio\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: reservasFuturas.map(reserva => {\n          var _reserva$usuario;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Fecha: \", new Date(reserva.fecha).toLocaleDateString(), \" - Hora: \", new Date(reserva.fecha).toLocaleTimeString([], {\n              hour: \"2-digit\",\n              minute: \"2-digit\"\n            }), \" - Usuario: \", ((_reserva$usuario = reserva.usuario) === null || _reserva$usuario === void 0 ? void 0 : _reserva$usuario.name) || \"Sin usuario\"]\n          }, reserva._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }, this), vista === \"historial\" && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Historial de Reservas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Pendientes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: historial.filter(reserva => new Date(reserva.fecha) >= new Date()).map(reserva => {\n          var _reserva$espacio;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Fecha: \", new Date(reserva.fecha).toLocaleDateString(), \" - Espacio: \", ((_reserva$espacio = reserva.espacio) === null || _reserva$espacio === void 0 ? void 0 : _reserva$espacio.nombre) || \"Espacio no asignado\"]\n          }, reserva._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"Realizadas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: historial.filter(reserva => new Date(reserva.fecha) < new Date()).map(reserva => {\n          var _reserva$espacio2;\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Fecha: \", new Date(reserva.fecha).toLocaleDateString(), \" - Espacio: \", ((_reserva$espacio2 = reserva.espacio) === null || _reserva$espacio2 === void 0 ? void 0 : _reserva$espacio2.nombre) || \"Espacio no asignado\"]\n          }, reserva._id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 235,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n_s(ReservasPage, \"aeSXgI/XIpaJS7EJnZENcaL9meY=\");\n_c = ReservasPage;\nexport default ReservasPage;\nvar _c;\n$RefreshReg$(_c, \"ReservasPage\");","map":{"version":3,"names":["React","useState","useEffect","axios","Calendar","jsxDEV","_jsxDEV","ReservasPage","_s","vista","setVista","espacios","setEspacios","espacioSeleccionado","setEspacioSeleccionado","reservas","setReservas","reservasFuturas","setReservasFuturas","historial","setHistorial","fechaSeleccionada","setFechaSeleccionada","Date","message","setMessage","horaInicio","setHoraInicio","restricciones","setRestricciones","inicio","fin","showPopup","setShowPopup","fetchEspacios","response","get","data","length","_id","error","console","fetchReservas","params","espacio","fetchReservasFuturas","futuras","fetchHistorial","headers","Authorization","localStorage","getItem","cambiarVista","nuevaVista","handleCrearReserva","post","fecha","toISOString","split","reserva","resaltarDiasReservados","date","fechasReservadas","map","toDateString","includes","generarHoras","inicioHora","Number","finHora","horas","hora","push","toString","padStart","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","value","onChange","e","target","nombre","tileClassName","_reserva$usuario","toLocaleDateString","toLocaleTimeString","hour","minute","usuario","name","filter","_reserva$espacio","_reserva$espacio2","_c","$RefreshReg$"],"sources":["C:/Users/janom/OneDrive/Documentos/GitHub/gestion_condominios/gestion-condominios/frontend/src/pages/ReservasPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport Calendar from \"react-calendar\";\r\nimport \"react-calendar/dist/Calendar.css\";\r\nimport \"./ReservasPage.css\";\r\n\r\nconst ReservasPage = () => {\r\n  // Estados principales\r\n  const [vista, setVista] = useState(\"reservar\"); // Controla la vista actual: \"reservar\" o \"historial\"\r\n  const [espacios, setEspacios] = useState([]); // Lista de espacios comunes\r\n  const [espacioSeleccionado, setEspacioSeleccionado] = useState(\"\"); // Espacio actualmente seleccionado\r\n  const [reservas, setReservas] = useState([]); // Reservas del espacio seleccionado\r\n  const [reservasFuturas, setReservasFuturas] = useState([]); // Futuras reservas de todos los usuarios\r\n  const [historial, setHistorial] = useState([]); // Historial de reservas del usuario autenticado\r\n  const [fechaSeleccionada, setFechaSeleccionada] = useState(new Date()); // Fecha seleccionada en el calendario\r\n  const [message, setMessage] = useState(\"\"); // Mensaje informativo para el usuario\r\n  const [horaInicio, setHoraInicio] = useState(\"\"); // Hora de inicio seleccionada\r\n  const [restricciones, setRestricciones] = useState({ inicio: \"06:00\", fin: \"20:00\" }); // Horarios permitidos para reservas\r\n  const [showPopup, setShowPopup] = useState(false); // Controla la visibilidad del pop-up de confirmación\r\n\r\n  // --- Funciones de Carga ---\r\n\r\n  // Cargar espacios al iniciar\r\n  useEffect(() => {\r\n    const fetchEspacios = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/espacios\");\r\n        setEspacios(response.data);\r\n        if (response.data.length > 0) {\r\n          setEspacioSeleccionado(response.data[0]._id); // Selecciona automáticamente el primer espacio\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al cargar espacios:\", error);\r\n      }\r\n    };\r\n\r\n    fetchEspacios();\r\n  }, []);\r\n\r\n  // Cargar reservas del espacio seleccionado\r\n  useEffect(() => {\r\n    const fetchReservas = async () => {\r\n      try {\r\n        if (espacioSeleccionado) {\r\n          const response = await axios.get(\"http://localhost:5000/api/reservas\", {\r\n            params: { espacio: espacioSeleccionado },\r\n          });\r\n          setReservas(response.data); // Actualiza la lista de reservas\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al cargar reservas:\", error);\r\n      }\r\n    };\r\n\r\n    fetchReservas();\r\n  }, [espacioSeleccionado]);\r\n\r\n  // Cargar reservas futuras de todos los usuarios para el espacio seleccionado\r\n  useEffect(() => {\r\n    const fetchReservasFuturas = async () => {\r\n      try {\r\n        if (espacioSeleccionado) {\r\n          const response = await axios.get(\"http://localhost:5000/api/reservas\", {\r\n            params: { espacio: espacioSeleccionado, futuras: true },\r\n          });\r\n          setReservasFuturas(response.data); // Actualiza las reservas futuras\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Error al cargar reservas futuras:\", error);\r\n      }\r\n    };\r\n\r\n    fetchReservasFuturas();\r\n  }, [espacioSeleccionado]);\r\n\r\n  // Cargar historial de reservas del usuario autenticado\r\n  useEffect(() => {\r\n    const fetchHistorial = async () => {\r\n      try {\r\n        const response = await axios.get(\"http://localhost:5000/api/reservas/historial\", {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n        });\r\n        setHistorial(response.data); // Actualiza el historial del usuario autenticado\r\n      } catch (error) {\r\n        console.error(\"Error al cargar el historial de reservas:\", error);\r\n      }\r\n    };\r\n\r\n    fetchHistorial();\r\n  }, []);\r\n\r\n  // --- Lógica de Negocio ---\r\n\r\n  // Cambiar entre las vistas \"Reservar\" y \"Historial\"\r\n  const cambiarVista = (nuevaVista) => setVista(nuevaVista);\r\n\r\n  // Crear nueva reserva\r\n  const handleCrearReserva = async () => {\r\n    try {\r\n      if (!horaInicio) {\r\n        setMessage(\"Por favor, selecciona una hora de inicio.\");\r\n        return;\r\n      }\r\n\r\n      const response = await axios.post(\r\n        \"http://localhost:5000/api/reservas\",\r\n        {\r\n          espacio: espacioSeleccionado,\r\n          fecha: `${fechaSeleccionada.toISOString().split(\"T\")[0]}T${horaInicio}:00`,\r\n        },\r\n        {\r\n          headers: { Authorization: `Bearer ${localStorage.getItem(\"token\")}` },\r\n        }\r\n      );\r\n\r\n      setMessage(\"Reserva creada exitosamente\");\r\n      setReservasFuturas([...reservasFuturas, response.data.reserva]); // Actualizar futuras reservas\r\n      setShowPopup(false); // Cerrar pop-up\r\n    } catch (error) {\r\n      setMessage(\"Error al crear la reserva.\");\r\n    }\r\n  };\r\n\r\n  // Resaltar días con reservas en el calendario\r\n  const resaltarDiasReservados = ({ date }) => {\r\n    const fechasReservadas = reservas.map((reserva) =>\r\n      new Date(reserva.fecha).toDateString()\r\n    );\r\n    return fechasReservadas.includes(date.toDateString())\r\n      ? \"dia-reservado\"\r\n      : null;\r\n  };\r\n\r\n  // Generar lista de horas permitidas según las restricciones\r\n  const generarHoras = () => {\r\n    const [inicioHora] = restricciones.inicio.split(\":\").map(Number);\r\n    const [finHora] = restricciones.fin.split(\":\").map(Number);\r\n\r\n    const horas = [];\r\n    for (let hora = inicioHora; hora < finHora; hora++) {\r\n      horas.push(`${hora.toString().padStart(2, \"0\")}:00`);\r\n    }\r\n    return horas;\r\n  };\r\n\r\n  // --- Renderizado ---\r\n  return (\r\n    <div className=\"reservas-container\">\r\n      <h2>Gestión de Reservas</h2>\r\n\r\n      {/* Navegación entre pestañas */}\r\n      <div className=\"nav-tabs\">\r\n        <button onClick={() => cambiarVista(\"reservar\")} className={vista === \"reservar\" ? \"active-tab\" : \"\"}>\r\n          Realizar Reserva\r\n        </button>\r\n        <button onClick={() => cambiarVista(\"historial\")} className={vista === \"historial\" ? \"active-tab\" : \"\"}>\r\n          Ver Historial\r\n        </button>\r\n      </div>\r\n\r\n      {/* Vista de Reservar */}\r\n      {vista === \"reservar\" && (\r\n        <div>\r\n          <select\r\n            value={espacioSeleccionado}\r\n            onChange={(e) => setEspacioSeleccionado(e.target.value)}\r\n          >\r\n            {espacios.map((espacio) => (\r\n              <option key={espacio._id} value={espacio._id}>\r\n                {espacio.nombre}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <Calendar\r\n            onChange={(date) => setFechaSeleccionada(date)}\r\n            value={fechaSeleccionada}\r\n            tileClassName={resaltarDiasReservados}\r\n          />\r\n\r\n          <select value={horaInicio} onChange={(e) => setHoraInicio(e.target.value)}>\r\n            <option value=\"\">Seleccione una hora</option>\r\n            {generarHoras().map((hora) => (\r\n              <option key={hora} value={hora}>\r\n                {hora}\r\n              </option>\r\n            ))}\r\n          </select>\r\n\r\n          <button onClick={() => setShowPopup(true)}>Solicitar reserva</button>\r\n\r\n          {showPopup && (\r\n            <div className=\"popup-overlay\">\r\n              <div className=\"popup\">\r\n                <h3>Confirmación de Reserva</h3>\r\n                <p>Para confirmar la reserva es necesario pagar la mitad por adelantado.</p>\r\n                <button className=\"btn-continuar\" onClick={handleCrearReserva}>\r\n                  Continuar\r\n                </button>\r\n                <button className=\"btn-cancelar\" onClick={() => setShowPopup(false)}>\r\n                  Cancelar\r\n                </button>\r\n              </div>\r\n            </div>\r\n          )}\r\n\r\n          {/* Futuras reservas de este espacio */}\r\n          <h3>Futuras reservas de este espacio</h3>\r\n          <ul>\r\n            {reservasFuturas.map((reserva) => (\r\n              <li key={reserva._id}>\r\n                Fecha: {new Date(reserva.fecha).toLocaleDateString()} - Hora: {new Date(reserva.fecha).toLocaleTimeString([], { hour: \"2-digit\", minute: \"2-digit\" })} - Usuario: {reserva.usuario?.name || \"Sin usuario\"}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* Vista de Historial */}\r\n      {vista === \"historial\" && (\r\n        <div>\r\n          <h3>Historial de Reservas</h3>\r\n          <h4>Pendientes</h4>\r\n          <ul>\r\n            {historial.filter(reserva => new Date(reserva.fecha) >= new Date()).map((reserva) => (\r\n              <li key={reserva._id}>\r\n                Fecha: {new Date(reserva.fecha).toLocaleDateString()} - \r\n                Espacio: {reserva.espacio?.nombre || \"Espacio no asignado\"}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n          <h4>Realizadas</h4>\r\n          <ul>\r\n            {historial.filter(reserva => new Date(reserva.fecha) < new Date()).map((reserva) => (\r\n              <li key={reserva._id}>\r\n                Fecha: {new Date(reserva.fecha).toLocaleDateString()} - \r\n                Espacio: {reserva.espacio?.nombre || \"Espacio no asignado\"}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ReservasPage;\r\n\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}